name: Poetry Publish and Documentation Workflow

on:
  push:
    branches:
      - test
      - main
      - docs

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python environment
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'  # Replace with your desired version
      - name: Install Poetry and dependencies
        run: |
          python -m pip install poetry
          poetry install
      - name: Install mkdocs  # Install mkdocs here for shared use
        run: python -m pip install mkdocs
      - name: Test poetry version
        run: poetry --version
      - name: Check Poetry project
        run: poetry config
      - name: Install mkdocs
        run: python -m pip install mkdocs

  publish_to_pipy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'  # Only run on the test branch
    steps:
      - uses: actions/checkout@v3
      - name: Install Poetry and dependencies
        run: |
          python -m pip install poetry
          poetry install
      - name: Configure Poetry for pypi
        run: |
          poetry config pypi-token.pypi ${{secrets.PIPY_TOK}} 
      - name: Update local
        run: |
          git pull
      - name: Patch version
        run: poetry version patch
      - name: Test poetry version
        run: poetry --version
      - name: Run Poetry Publish 
        run: poetry publish --build

  publish-dry-run:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/test'  # Only run on the test branch
    steps:
      - uses: actions/checkout@v3
      - name: Install Poetry and dependencies
        run: |
          python -m pip install poetry
          poetry install
      - name: Configure Poetry for testpypi
        run: |
          poetry config repositories.testpypi https://test.pypi.org/legacy/
          poetry config pypi-token.testpypi ${{ secrets.TEST_PIPY_KEY }}
      - name: Update local
        run: |
          git pull
      - name: Patch version
        run: poetry version patch
      - name: Test poetry version
        run: poetry --version
      - name: Test poetry version
        run: poetry --version
      - name: Run Poetry Publish dry-run
        run: poetry publish -r testpypi --build --dry-run


  publish_new_docs:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/docs'  # Only run on the docs branch
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.x
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'  # Replace 'x' with the desired Python version
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mkdocs-material  # Replace with your desired theme
          pip install mkdocs-git-revision-date-localized-plugin  # Optional plugin for localized dates
      - name: Update local
        run: |
          git pull
      - name: Clear documentation site.
        run: | 
          cd docs/
          rm -rf site/
      - name: Build documentation
        run: |
          cd docs/ 
          mkdocs build    
      - name: Publish documentation
        run: |
          cd docs/ 
          mkdocs gh-deploy                    
      - name: Succesfull publish
        run: echo "New documentation wass succesfully publish."



